# Generated by Django 4.0.3 on 2022-03-26 12:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('categories', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=True, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(blank=True, choices=[('user', 'User'), ('education_centre', 'EducationCentre'), ('teacher', 'Teacher'), ('non_profit_organization', 'Non-profit Organization'), ('employer', 'Employer')], max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('first_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('father_name', models.CharField(max_length=100, verbose_name='father_name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('activation_code', models.CharField(blank=True, max_length=36)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['email'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('first_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('father_name', models.CharField(max_length=100, verbose_name='father_name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='номер телефона')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('about_self', models.TextField(null=True, verbose_name='доп информация')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('father_name', models.CharField(max_length=100, verbose_name='father_name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('avatar', models.ImageField(null=True, upload_to='')),
                ('description', models.TextField(null=True)),
                ('instagram', models.CharField(blank=True, max_length=250, null=True)),
                ('video', models.CharField(blank=True, max_length=250, null=True)),
                ('address', models.CharField(max_length=250, null=True)),
                ('number_of_students', models.PositiveIntegerField(blank=True, null=True)),
                ('verification', models.BooleanField(blank=True, default=False)),
                ('work_experience', models.TextField(null=True)),
                ('cost_per_hour', models.PositiveIntegerField(null=True)),
                ('time_table', models.CharField(max_length=250, null=True)),
                ('lesson_duration', models.CharField(max_length=250, null=True)),
                ('education', models.TextField(null=True)),
                ('sale', models.CharField(blank=True, max_length=250, null=True)),
                ('number_of_comments', models.PositiveIntegerField(blank=True, default=0)),
                ('sum_of_rate', models.PositiveIntegerField(blank=True, default=0)),
                ('rate', models.FloatField(blank=True, default=0)),
                ('categories', models.ManyToManyField(related_name='categories', to='categories.category')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NonProfitOrganizationProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('father_name', models.CharField(max_length=100, verbose_name='father_name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('organization_name', models.CharField(max_length=250, null=True)),
                ('description', models.TextField(null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('father_name', models.CharField(max_length=100, verbose_name='father_name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('organization_name', models.CharField(max_length=250, null=True)),
                ('description', models.TextField(null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EducationCentreProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('father_name', models.CharField(max_length=100, verbose_name='father_name')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('logo', models.ImageField(null=True, upload_to='')),
                ('organization_name', models.CharField(max_length=250, null=True)),
                ('description', models.TextField(null=True)),
                ('instagram', models.CharField(blank=True, max_length=250, null=True)),
                ('video', models.CharField(blank=True, max_length=250, null=True)),
                ('address', models.TextField(null=True)),
                ('number_of_students', models.PositiveIntegerField(blank=True, null=True)),
                ('verification', models.BooleanField(blank=True, default=False)),
                ('number_of_comments', models.PositiveIntegerField(blank=True, default=0)),
                ('sum_of_rate', models.PositiveIntegerField(blank=True, default=0)),
                ('rate', models.FloatField(blank=True, default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
